import com.android.build.gradle.tasks.MergeSourceSetFolders
import com.nishtahir.CargoBuildTask

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'org.mozilla.rust-android-gradle.rust-android'

android {
    signingConfigs {
        debug {
            storeFile file('/home/itscrystalline/Documents/keystore.jks')
            storePassword '2147483648'
            keyAlias 'olauncher'
            keyPassword '2147483648'
        }
    }
    compileSdk 34
    ndkVersion "26.1.10909125"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17.toString()
    }

    defaultConfig {
        applicationId "app.olauncher"
        minSdkVersion 24
        targetSdkVersion 34
        versionCode 92
        versionName "v5.3.2"

        resourceConfigurations += ["en", "ar", "de", "es-rES", "es-rUS", "fr", "hr", "hu", "in", "it", "ja", "pl", "pt-rBR", "ru-rRU", "sv", "tr", "uk", "zh"]
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            debuggable false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
            minifyEnabled false
            applicationIdSuffix ".debug"
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        viewBinding = true
    }
    namespace 'app.olauncher'

}

tasks.configureEach { task ->
    if ((task.name == 'mergeDebugJniLibFolders' || task.name == 'mergeReleaseJniLibFolders')) {
        task.dependsOn 'cargoBuild'
    }
}
// The below dependsOn is needed till https://github.com/mozilla/rust-android-gradle/issues/85 is resolved this fix was got from #118
tasks.matching { it.name.matches(/merge.*JniLibFolders/) }.configureEach {
    it.inputs.dir(new File(buildDir, "rustJniLibs/android"))
    it.dependsOn("cargoBuild")
}

cargo {
    module = "../occasion-android"       // Or whatever directory contains your Cargo.toml
    libname = "occasion_android"          // Or whatever matches Cargo.toml's [package] name.
    targets = ["arm64", "x86_64"]  // See bellow for a longer list of options
    profile = "release"
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation libs.kotlin.stdlib
    implementation libs.core.ktx
    implementation libs.appcompat
    implementation libs.recyclerview

    // Android lifecycle
    implementation libs.lifecycle.extensions
    implementation libs.lifecycle.viewmodel.ktx

    // Navigation
    implementation libs.navigation.fragment.ktx

    // Work Manager
    implementation libs.work.runtime.ktx

    //Material dependency
    implementation libs.material

}